{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiancevallos/Desktop/School/UCLA/Winter 2023/CS 35L/cs35l_project/client/src/pages/test.js\";\nimport React from 'react';\nfunction test() {\n  var gapi = window.gapi;\n  /* \n    Update with your own Client Id and Api key \n  */\n  var CLIENT_ID = REACT_APP_CLIENT_ID;\n  var API_KEY = \"\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n  var handleClick = function handleClick() {\n    gapi.load('client:auth2', function () {\n      console.log('loaded client');\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', function () {\n        return console.log('bam!');\n      });\n      gapi.auth2.getAuthInstance().signIn().then(function () {\n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': ['RRULE:FREQ=DAILY;COUNT=2'],\n          'attendees': [{\n            'email': 'lpage@example.com'\n          }, {\n            'email': 'sbrin@example.com'\n          }],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [{\n              'method': 'email',\n              'minutes': 24 * 60\n            }, {\n              'method': 'popup',\n              'minutes': 10\n            }]\n          }\n        };\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event\n        });\n        request.execute(function (event) {\n          console.log(event);\n          window.open(event.htmlLink);\n        });\n\n        /*\n            Uncomment the following block to get events\n        */\n        /*\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        */\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"test-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Click to add event to Google Calendar\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Uncomment the get events code to get events\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Don't forget to add your Client Id and Api key\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: 100,\n      height: 50\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Add Event\")));\n}\nexport default test;","map":{"version":3,"names":["React","test","gapi","window","CLIENT_ID","REACT_APP_CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","console","log","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","request","calendar","events","insert","execute","open","htmlLink","fontSize","width","height"],"sources":["/Users/sebastiancevallos/Desktop/School/UCLA/Winter 2023/CS 35L/cs35l_project/client/src/pages/test.js"],"sourcesContent":["import React from 'react';\n\nfunction test() {\n\n  var gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  var CLIENT_ID = REACT_APP_CLIENT_ID\n  var API_KEY = \"\"\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client')\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        \n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=2'\n          ],\n          'attendees': [\n            {'email': 'lpage@example.com'},\n            {'email': 'sbrin@example.com'}\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'email', 'minutes': 24 * 60},\n              {'method': 'popup', 'minutes': 10}\n            ]\n          }\n        }\n\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n        /*\n            Uncomment the following block to get events\n        */\n        /*\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        */\n    \n\n      })\n    })\n  }\n\n\n  return (\n    <div className=\"test\">\n      <header className=\"test-header\">\n        <p>Click to add event to Google Calendar</p>\n        <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\n        <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\n        <button style={{width: 100, height: 50}} onClick={handleClick}>Add Event</button>\n      </header>\n    </div>\n  );\n}\n\nexport default test;"],"mappings":"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"},"metadata":{},"sourceType":"module"}